// Generated by @wagmi/cli@0.1.11 on 3/5/2023 at 1:13:57 AM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
} from "wagmi";
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from "wagmi/actions";

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BanditClub
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const banditClubABI = [
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "actionToPoints",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "cntrct", internalType: "address", type: "address" },
    ],
    name: "checkUserCall",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "cntrct", internalType: "address", type: "address" }],
    name: "claimSubscriptionFees",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "clubFees",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "memberFees",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "cntrct", internalType: "address", type: "address" }],
    name: "previewSubscriptionFeeClaim",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "cntrct", internalType: "address", type: "address" },
      { name: "feeRecipient", internalType: "address", type: "address" },
    ],
    name: "registerContract",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "registeredContracts",
    outputs: [
      { name: "feeRecipient", internalType: "address", type: "address" },
      { name: "points", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "registeredContractsCount",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "registeredContractsList",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [{ name: "subscriber", internalType: "address", type: "address" }],
    name: "subscribe",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalPoints",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "userPoints",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link banditClubABI}__.
 */
export function useBanditClub(
  config: Omit<UseContractConfig, "abi"> = {} as any
) {
  return useContract({ abi: banditClubABI, ...config });
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__.
 */
export function useBanditClubRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof banditClubABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof banditClubABI, TFunctionName, TSelectData>,
    "abi"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"actionToPoints"`.
 */
export function useBanditClubActionToPoints<
  TSelectData = ReadContractResult<typeof banditClubABI, "actionToPoints">
>(
  config: Omit<
    UseContractReadConfig<typeof banditClubABI, "actionToPoints", TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "actionToPoints",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "actionToPoints", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"clubFees"`.
 */
export function useBanditClubClubFees<
  TSelectData = ReadContractResult<typeof banditClubABI, "clubFees">
>(
  config: Omit<
    UseContractReadConfig<typeof banditClubABI, "clubFees", TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "clubFees",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "clubFees", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"memberFees"`.
 */
export function useBanditClubMemberFees<
  TSelectData = ReadContractResult<typeof banditClubABI, "memberFees">
>(
  config: Omit<
    UseContractReadConfig<typeof banditClubABI, "memberFees", TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "memberFees",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "memberFees", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"registeredContracts"`.
 */
export function useBanditClubRegisteredContracts<
  TSelectData = ReadContractResult<typeof banditClubABI, "registeredContracts">
>(
  config: Omit<
    UseContractReadConfig<
      typeof banditClubABI,
      "registeredContracts",
      TSelectData
    >,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "registeredContracts",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "registeredContracts", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"registeredContractsCount"`.
 */
export function useBanditClubRegisteredContractsCount<
  TSelectData = ReadContractResult<
    typeof banditClubABI,
    "registeredContractsCount"
  >
>(
  config: Omit<
    UseContractReadConfig<
      typeof banditClubABI,
      "registeredContractsCount",
      TSelectData
    >,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "registeredContractsCount",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "registeredContractsCount", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"registeredContractsList"`.
 */
export function useBanditClubRegisteredContractsList<
  TSelectData = ReadContractResult<
    typeof banditClubABI,
    "registeredContractsList"
  >
>(
  config: Omit<
    UseContractReadConfig<
      typeof banditClubABI,
      "registeredContractsList",
      TSelectData
    >,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "registeredContractsList",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "registeredContractsList", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"totalPoints"`.
 */
export function useBanditClubTotalPoints<
  TSelectData = ReadContractResult<typeof banditClubABI, "totalPoints">
>(
  config: Omit<
    UseContractReadConfig<typeof banditClubABI, "totalPoints", TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "totalPoints",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "totalPoints", TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"userPoints"`.
 */
export function useBanditClubUserPoints<
  TSelectData = ReadContractResult<typeof banditClubABI, "userPoints">
>(
  config: Omit<
    UseContractReadConfig<typeof banditClubABI, "userPoints", TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: banditClubABI,
    functionName: "userPoints",
    ...config,
  } as UseContractReadConfig<typeof banditClubABI, "userPoints", TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link banditClubABI}__.
 */
export function useBanditClubWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof banditClubABI, string>["abi"],
        TFunctionName
      >
    : UseContractWriteConfig<TMode, typeof banditClubABI, TFunctionName> & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<TMode, typeof banditClubABI, TFunctionName>({
    abi: banditClubABI,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"checkUserCall"`.
 */
export function useBanditClubCheckUserCall<TMode extends WriteContractMode>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof banditClubABI,
          "checkUserCall"
        >["abi"],
        "checkUserCall"
      > & { functionName?: "checkUserCall" }
    : UseContractWriteConfig<TMode, typeof banditClubABI, "checkUserCall"> & {
        abi?: never;
        functionName?: "checkUserCall";
      } = {} as any
) {
  return useContractWrite<TMode, typeof banditClubABI, "checkUserCall">({
    abi: banditClubABI,
    functionName: "checkUserCall",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"claimSubscriptionFees"`.
 */
export function useBanditClubClaimSubscriptionFees<
  TMode extends WriteContractMode
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof banditClubABI,
          "claimSubscriptionFees"
        >["abi"],
        "claimSubscriptionFees"
      > & { functionName?: "claimSubscriptionFees" }
    : UseContractWriteConfig<
        TMode,
        typeof banditClubABI,
        "claimSubscriptionFees"
      > & {
        abi?: never;
        functionName?: "claimSubscriptionFees";
      } = {} as any
) {
  return useContractWrite<TMode, typeof banditClubABI, "claimSubscriptionFees">(
    {
      abi: banditClubABI,
      functionName: "claimSubscriptionFees",
      ...config,
    } as any
  );
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"previewSubscriptionFeeClaim"`.
 */
export function useBanditClubPreviewSubscriptionFeeClaim<
  TMode extends WriteContractMode
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof banditClubABI,
          "previewSubscriptionFeeClaim"
        >["abi"],
        "previewSubscriptionFeeClaim"
      > & { functionName?: "previewSubscriptionFeeClaim" }
    : UseContractWriteConfig<
        TMode,
        typeof banditClubABI,
        "previewSubscriptionFeeClaim"
      > & {
        abi?: never;
        functionName?: "previewSubscriptionFeeClaim";
      } = {} as any
) {
  return useContractWrite<
    TMode,
    typeof banditClubABI,
    "previewSubscriptionFeeClaim"
  >({
    abi: banditClubABI,
    functionName: "previewSubscriptionFeeClaim",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"registerContract"`.
 */
export function useBanditClubRegisterContract<TMode extends WriteContractMode>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof banditClubABI,
          "registerContract"
        >["abi"],
        "registerContract"
      > & { functionName?: "registerContract" }
    : UseContractWriteConfig<
        TMode,
        typeof banditClubABI,
        "registerContract"
      > & {
        abi?: never;
        functionName?: "registerContract";
      } = {} as any
) {
  return useContractWrite<TMode, typeof banditClubABI, "registerContract">({
    abi: banditClubABI,
    functionName: "registerContract",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"subscribe"`.
 */
export function useBanditClubSubscribe<TMode extends WriteContractMode>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof banditClubABI, "subscribe">["abi"],
        "subscribe"
      > & { functionName?: "subscribe" }
    : UseContractWriteConfig<TMode, typeof banditClubABI, "subscribe"> & {
        abi?: never;
        functionName?: "subscribe";
      } = {} as any
) {
  return useContractWrite<TMode, typeof banditClubABI, "subscribe">({
    abi: banditClubABI,
    functionName: "subscribe",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link banditClubABI}__.
 */
export function usePrepareBanditClubWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof banditClubABI, TFunctionName>,
    "abi"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: banditClubABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof banditClubABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"checkUserCall"`.
 */
export function usePrepareBanditClubCheckUserCall(
  config: Omit<
    UsePrepareContractWriteConfig<typeof banditClubABI, "checkUserCall">,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: banditClubABI,
    functionName: "checkUserCall",
    ...config,
  } as UsePrepareContractWriteConfig<typeof banditClubABI, "checkUserCall">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"claimSubscriptionFees"`.
 */
export function usePrepareBanditClubClaimSubscriptionFees(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof banditClubABI,
      "claimSubscriptionFees"
    >,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: banditClubABI,
    functionName: "claimSubscriptionFees",
    ...config,
  } as UsePrepareContractWriteConfig<typeof banditClubABI, "claimSubscriptionFees">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"previewSubscriptionFeeClaim"`.
 */
export function usePrepareBanditClubPreviewSubscriptionFeeClaim(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof banditClubABI,
      "previewSubscriptionFeeClaim"
    >,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: banditClubABI,
    functionName: "previewSubscriptionFeeClaim",
    ...config,
  } as UsePrepareContractWriteConfig<typeof banditClubABI, "previewSubscriptionFeeClaim">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"registerContract"`.
 */
export function usePrepareBanditClubRegisterContract(
  config: Omit<
    UsePrepareContractWriteConfig<typeof banditClubABI, "registerContract">,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: banditClubABI,
    functionName: "registerContract",
    ...config,
  } as UsePrepareContractWriteConfig<typeof banditClubABI, "registerContract">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link banditClubABI}__ and `functionName` set to `"subscribe"`.
 */
export function usePrepareBanditClubSubscribe(
  config: Omit<
    UsePrepareContractWriteConfig<typeof banditClubABI, "subscribe">,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: banditClubABI,
    functionName: "subscribe",
    ...config,
  } as UsePrepareContractWriteConfig<typeof banditClubABI, "subscribe">);
}
